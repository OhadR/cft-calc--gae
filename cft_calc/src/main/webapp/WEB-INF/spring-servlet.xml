<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security 
							http://www.springframework.org/schema/security/spring-security-3.1.xsd
						http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">


	<context:annotation-config />

	<context:property-placeholder location="classpath:client.properties" />
	
	<context:component-scan base-package="com.ohadr.cbenchmarkr" />
	<context:component-scan base-package="com.ohadr.auth_flows" />
	<context:component-scan base-package="com.ohadr.crypto" />

	<mvc:annotation-driven />
	<mvc:default-servlet-handler />

	<!-- dont use debug! https://jira.spring.io/browse/SEC-1885 >
	<sec:debug />
	 -->
	 
	 <!-- if I want to secure HTMLs, I put them in 'secured_resources', and map it to
	 'secured', where 'secured' is secured (in http) - ->
	 <mvc:resources mapping="/secured/**" location="/secured_resources/" />
	 -->
	 
	
	<sec:http pattern="/login/**" security="none" />
	<sec:http pattern="/forgotPasswordPage" security="none" />
	<sec:http pattern="/createAccountPage" security="none" />
	<sec:http pattern="/createAccount" security="none" />

	<sec:http authentication-manager-ref="authenticationManager">
	    <sec:intercept-url pattern="/secured/**" access="ROLE_USER" requires-channel="https"/>
	    <sec:intercept-url pattern="/secured/admin/**" access="ROLE_ADMIN" requires-channel="https"/>
	    	    	    
		<sec:anonymous />

		<sec:form-login login-page="/login/login.htm"
			authentication-success-handler-ref="RESTauthenticationSuccessHandler"
			authentication-failure-handler-ref="authenticationFailureHandler" />
		<!-- sec:logout /-->

    	<sec:custom-filter position="LOGOUT_FILTER" ref="restLogoutFilter" />

	</sec:http>

  
	
	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userDetailsService">
			<sec:password-encoder hash="sha-256">
				<sec:salt-source user-property="username" />
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
	</bean>

	<bean id="authenticationFailureHandler" class="com.ohadr.auth_flows.core.AuthenticationFailureHandler">
		<!-- constructor-arg value="/login/login.htm?login_error=1" /-->
		<property name="accountLockedUrl" value="/login/accountLocked.htm" />
	</bean>


	<!-- decide how you wanna work: in-mem repo, or jdbc impl: -->
	<!-- bean class="com.ohadr.auth_flows.mocks.InMemoryAuthenticationAccountRepositoryImpl" / -->
	<bean id="userDetailsService"
		class="com.ohadr.auth_flows.core.gae.GAEAuthenticationAccountRepositoryImpl" />

	<!--bean class="com.ohadr.auth_flows.core.jdbc.JdbcAuthenticationPolicyRepositoryImpl" / -->
	<bean
		class="com.ohadr.auth_flows.mocks.MockAuthenticationPolicyRepositoryImpl" />



	<bean id="mailSender" class="com.ohadr.auth_flows.core.gae.GAEMailSenderImpl" />

	
	<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <value>
                resource.loader=class
                class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
            </value>
        </property>
    </bean>
    
	<bean id="restLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    <constructor-arg>
	        <bean class="com.ohadr.auth_flows.web.rest.NoRedirectLogoutSuccessHandler" />
	    </constructor-arg>
	    <constructor-arg>
	        <list>
	            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
	        </list>
	    </constructor-arg>
	</bean>	
	
		
</beans>